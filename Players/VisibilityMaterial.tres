[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D visibility_mask;
uniform vec4 color: hint_color = vec4(1.0, 0.0, 0.0, 1.0);
uniform float visibility_threshold = 0.2;

varying vec3 world_vertex;

void vertex() {
	world_vertex = (WORLD_MATRIX * vec4(VERTEX, 1.0)).xyz;
}

void fragment() {
	vec2 uv = world_vertex.xz;
	uv += vec2(50.0, 50.0);
	uv /= 100.0;
	uv.y = 1.0 - uv.y;
	
	ALPHA = float(length(texture(visibility_mask, uv).rgb) > visibility_threshold);
	ALBEDO = color.rgb;
	//ALBEDO = vec3(uv.x);
}"

[resource]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/color = Color( 1, 0, 0, 1 )
shader_param/visibility_threshold = 0.2
